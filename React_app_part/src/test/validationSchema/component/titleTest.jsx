import testMatches from "./testMatches";

function titleTest (data, schema) {
    const titleValidValues = [
        "Bonjour",
        "Je suis √©tudiant",
        "√Ä bient√¥t !",
        "1234567890",
        "Voici une phrase avec des accents : √©√®√†√ß√¥√π",
        "Symbole ! ? . , : ; @ # * ? / ( )",
        "Ligne 1\nLigne 2\r\nLigne 3",
        "phrase avec 'guillemets' et \"doubles guillemets\"",
        "Espaces    multiples",
    ];

    const titleInvalidValues = [
        { value: "Hello üòä", reason: "emoji" },
        { value: "C≈ìur ‚ù§Ô∏è", reason: "symbole unicode" },
        { value: "<script>", reason: "chevrons < >" },
        { value: "‚Ç¨100", reason: "symbole euro" },
        { value: "Mot‚Äîmot", reason: "tiret long ‚Äî" },
        { value: "z‰∏≠Êñá", reason: "caract√®res chinois" },
        { value: "—Ä—É—Å—Å–∫–∏–π", reason: "alphabet cyrillique" },
        { value: "ŸÖÿ±ÿ≠ÿ®ÿß", reason: "alphabet arabe" },
        { value: "¬© Copyright", reason: "symbole ¬©" },
    ];

    test("should fail when title is empty", async () => {
        data.title = ''

        expect(schema.validate(data)).rejects.toThrow("Le titre est requis.")
    });
    test("should fail when title is too short", async () => {
        data.title = "er"
        expect(schema.validate(data)).rejects.toThrow("Le titre doit comporter au moins 3 caract√®res.")
    });

    test("should success when title's lenght is equal to 3", async () => {
        data.title = "ere"
        expect(schema.validate(data)).resolves.toEqual(data)
    });
    test("should success when title's lenght is equal to 50", async () => {
        data.title = "dnmfigpftvmjxqtfipwgerclmuccbusujqwmganuxyijqvrccz"
        expect(schema.validate(data)).resolves.toEqual(data)
    });
    test("should success when title's lenght is too long", async () => {
        data.title = "dnmfigpftvmjxqtfipwgerclmuccbusujqwmganuxyijqvrcczreuzi"
        expect(schema.validate(data)).rejects.toThrow("Le nombre maximal de caract√®res du titre est 50.")
    });


    testMatches(
        "title",
        titleValidValues,
        titleInvalidValues,
        schema,
        data,
        "Format invalide"
    );  
}

export default titleTest;
